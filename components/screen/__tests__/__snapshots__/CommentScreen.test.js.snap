// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CommentScreen renders all inputs as expected 1`] = `
<View
  style={
    Object {
      "height": "100%",
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "justifyContent": "center",
        },
        Object {
          "alignSelf": "center",
          "marginTop": "40%",
          "position": "absolute",
        },
      ]
    }
  >
    <View
      style={
        Object {
          "height": 60,
          "opacity": 1,
          "width": 60,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "bottom": 0,
            "justifyContent": "center",
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          style={
            Object {
              "height": 60,
              "transform": Array [
                Object {
                  "rotate": "45deg",
                },
              ],
              "width": 60,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "height": 30,
                "overflow": "hidden",
                "width": 60,
              }
            }
          >
            <View
              style={
                Object {
                  "height": 60,
                  "transform": Array [
                    Object {
                      "translateY": 0,
                    },
                    Object {
                      "rotate": "-165deg",
                    },
                  ],
                  "width": 60,
                }
              }
            >
              <View
                collapsable={false}
                style={
                  Object {
                    "height": 30,
                    "overflow": "hidden",
                    "width": 60,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "borderColor": "#0000ff",
                      "borderRadius": 30,
                      "borderWidth": 6,
                      "height": 60,
                      "width": 60,
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "bottom": 0,
            "justifyContent": "center",
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          style={
            Object {
              "height": 60,
              "transform": Array [
                Object {
                  "rotate": "45deg",
                },
              ],
              "width": 60,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "height": 30,
                "overflow": "hidden",
                "top": 30,
                "width": 60,
              }
            }
          >
            <View
              style={
                Object {
                  "height": 60,
                  "transform": Array [
                    Object {
                      "translateY": -30,
                    },
                    Object {
                      "rotate": "345deg",
                    },
                  ],
                  "width": 60,
                }
              }
            >
              <View
                collapsable={false}
                style={
                  Object {
                    "height": 30,
                    "overflow": "hidden",
                    "width": 60,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "borderColor": "#0000ff",
                      "borderRadius": 30,
                      "borderWidth": 6,
                      "height": 60,
                      "width": 60,
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "paddingBottom": "18%",
      }
    }
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View />
  </RCTScrollView>
  <View
    style={
      Object {
        "backgroundColor": "#6200ee",
        "borderColor": "transparent",
        "borderRadius": 4,
        "borderStyle": "solid",
        "borderWidth": 0,
        "bottom": "3%",
        "elevation": 2,
        "left": "10%",
        "minWidth": 64,
        "position": "absolute",
        "shadowColor": "#000000",
        "shadowOffset": Object {
          "height": 0.75,
          "width": 0,
        },
        "shadowOpacity": 0.24,
        "shadowRadius": 1.5,
        "width": "80%",
      }
    }
  >
    <View
      accessibilityRole="button"
      accessibilityStates={Array []}
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Object {
            "borderRadius": 4,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "#000000",
                "fontFamily": "System",
                "fontWeight": "400",
                "textAlign": "left",
              },
              Array [
                Object {
                  "letterSpacing": 1,
                  "marginHorizontal": 16,
                  "marginVertical": 9,
                  "textAlign": "center",
                },
                undefined,
                Object {
                  "textTransform": "uppercase",
                },
                Object {
                  "color": "#ffffff",
                  "fontFamily": "System",
                  "fontWeight": "500",
                },
                Object {
                  "fontFamily": "System",
                  "fontWeight": "500",
                },
                undefined,
              ],
            ]
          }
        >
          ADD COMMENT
        </Text>
      </View>
    </View>
  </View>
</View>
`;
